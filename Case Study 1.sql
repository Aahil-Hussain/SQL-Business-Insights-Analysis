select * from fact
select * from location
select * from product


--1. Display the number of states present in the LocationTable.

select * from location

select count(distinct state) as count_of_state from location


--2. How many products are of regular type?

select count(product) as count_of_prodcut from product
where type='regular'

--3. How much spending has been done on marketing of product ID 1?

select * from fact

select sum(marketing) as marketing from fact
where productid=1

--4. What is the minimum sales of a product?

select min(sales) as min_sales from fact

select top 1 * from fact order by Sales asc

--5. Display the max Cost of Good Sold (COGS).

select max(cogs) as max_cogs from fact

select top 1 * from fact order by cogs desc

--6. Display the details of the product where product type is coffee.

select * from product where product_type='coffee'


--7. Display the details where total expenses are greater than 40.

select * from fact where Total_Expenses>40

--8. What is the average sales in area code 719?

select avg(sales) as avg_Sales from fact
where area_code=719

--9. Find out the total profit generated by Colorado state

select sum(profit) as total_profit from fact f inner join location l
on f.Area_Code=l.Area_Code
where state='colorado'

select sum(f.profit) as total_profit from fact f, location l where l.state='colorado'
and f.Area_Code=l.Area_Code


--10. Display the average inventory for each product ID.

select productid, avg(inventory) as avg_inventory from fact
group by productid
order by ProductId

--11. Display state in a sequential order in a Location Table.

select distinct state from location order by state


--12. Display the average budget margin of the Product where the average budget
--margin should be greater than 100.

select productid, avg(budget_margin) as avg_margin from fact
group by productid
having avg(budget_margin)>100
order by productid asc


--13. What is the total sales done on date 2010-01-01?

select sum(sales) as total_Sale FROM Fact where area_code = 210



--14. Display the average total expense of each product ID on an individual date.

select productid,date,avg(total_expenses)
from fact
group by productid,date
order by productid,date

--15. Display the table with the following attributes such as date, product ID,
--product_type, product, sales, profit, state, area_code.


select f.Date,f.ProductId,p.Product_Type,p.Product,f.Sales,f.Profit,l.State,l.Area_Code from fact f 
inner join location l on f.Area_Code=l.Area_Code
inner join Product p on f.ProductId=p.ProductId

select f.Date,f.ProductId,p.Product_Type,p.Product,f.Sales,f.Profit,l.State,l.Area_Code from fact f,  location l, Product p
where f.Area_Code=l.Area_Code
and f.ProductId=p.ProductId


--16. Display the rank without any gap to show the sales wise rank.
select sales,dense_Rank() over(order by sales desc) as rank,Rank() over(order by sales desc) as rank from fact

--17. Find the state wise profit and sales.

select l.State,sum(sales) as sales,sum(profit) as profit from fact f inner join
location l on f.Area_Code=l.Area_Code
group by l.state

select l.state, sum(profit) as TotalSales, sum(sales) as TotalProfit from fact f, location l
where f.Area_Code=l.Area_Code
group by l.state


--18. Find the state wise profit and sales along with the product name.

select state,product,sum(sales) as sales,sum(profit) as profit from fact f 
inner join location l on f.Area_Code=l.Area_Code
inner join product p on p.Productid = f.productid
group by l.State,p.Product

select l.state, p.product, sum(profit) as TotalSales, sum(sales) as TotalProfit from fact f, location l, product p
where f.Area_Code=l.Area_Code
and p.Productid = f.productid
group by l.state, p.product




--19. If there is an increase in sales of 5%, calculate the increasedsales.

select * from fact
select productid,sales,sales * 1.05 as inc_Sales from fact


--20. Find the maximum profit along with the product ID and producttype.

select f.productid,p.product_type,max(profit) as profit from fact f inner join Product p
on f.ProductId=p.ProductId
group by f.productid,p.product_type

select f.productid,p.product_type,max(profit) as profit from fact f, Product p
where  f.ProductId=p.ProductId
group by f.productid,p.product_type
----------------------------------------------------------------------------------------------------------------------



--16. Display the rank without any gap to show the sales wise rank.
select sales,dense_Rank() over(order by sales desc) as rank,Rank() over(order by sales desc) as rank from fact

--21. Create a stored procedure to fetch the result according to the product type
--from Product Table.


create Procedure IcanDelete(@Product varchar (20))
as
begin
		select * from product where Product_Type=@Product
end

exec IcanDelete 'tea'


--22. Write a query by creating a condition in which if the total expenses is less than 60 then it is a profit or else loss.

select total_expenses,
case 
		when total_expenses < 60 then 'profit'
		else 'loss'
		end as status 
from fact
-----OR

iif(expression,true_value,false_value)

select total_expenses,iif(total_expenses<60,'profit','loss') as status from fact

--23. Give the total weekly sales value with the date and product ID details. Use roll-up to pull the data in hierarchical order.

select 
datepart(week,date) as weeks, 
productid, sum(sales)as sales 
from fact
group by datepart(month,date), datepart(week,date), productid with rollup


--24. Apply union and intersection operator on the tables which consist of
--attribute area code
 
select	* from fact 
union
select * from location

select	Area_Code from fact 
intersect
select Area_Code from location

--25. Create a user-defined function for the product table to fetch a particular
--product type based upon the user’s preference.

create function FilterDATA_Type(@Product varchar(20))
returns table
as
return
			(select product_type from product where product =@Product)

--select * from dbo.FilterDATA_Type('amaretto')

--26. Change the product type from coffee to tea where product IDis 1 and undo it.

begin tran
		update product
		set product_type='tea'
		where productid=1

rollback
--commit--dont do it, it will make things permmanent buddy.

--27. Display the date, product ID and sales where total expenses are between 100 to 200

select date, ProductId, sales from fact where total_expenses between 100 and 200

--28. Delete the records in the Product Table for regular type

delete from product where type in ('regular')

--29. Display the ASCII value of the fifth character from the column Product.

select substring(product,5,1) as fifth_character, ascii(substring(product,5,1)) as ascii_of_5th from Product
--------------------------------------------------------------------------------------------------
select	* from fact
select	* from location 
select	* from product